<?xml version="1.0" encoding="utf-8"?>

<project>
	
	<property name="src.dir" location="src"></property>
	<property name="test.src.dir" location="test"></property>
	<property name="lib.dir" location="lib"></property>
	<property name="build.dir" location="build"></property>
	<property name="build.src" location="${build.dir}/src"></property>
	<property name="build.classes" location="${build.dir}/classes"></property>
	<property name="build.lib.dir" location="${build.dir}/lib"></property>
	<property name="build.test.dir" location="${build.dir}/test"></property>
	<property name="build.test.src" location="${build.test.dir}/src"></property>
	<property name="build.test.classes" location="${build.test.dir}/classes"></property>
	<property name="build.test.report" location="${build.test.dir}/report"></property>
	<property name="build.test.report.html" location="${build.test.report}/html"></property>
	<property name="run.test.junit4.class" value="jlit.ant.junit4.TestHelloWorld"></property>
	<property name="run.test.junit3.class" value="jlit.ant.junit3.TestHelloWorld"></property>
	<property name="run.test.classes" value="**/Test*.class"></property>
	
	<fileset id="srcid" dir="${src.dir}">
		<include name="**/*.java"/>
	</fileset>
	<fileset id="testid" dir="${test.src.dir}">
		<include name="**/*.java"/>
	</fileset>
	<fileset id="libdir" dir="${lib.dir}">
		<include name="*.jar"/>
	</fileset>
	
	<path id="compile-path">
		<fileset refid="libdir"></fileset>
	</path>
	<path id="compile-test-path">
		<path refid="compile-path"></path>
		<pathelement location="${build.classes}"/>
	</path>
	<path id="run-test-path">
		<path refid="compile-test-path"></path>
		<pathelement location="${build.test.classes}"/>
	</path>
	
	
	<target name="clean">
		<echo>清理文件夹</echo>
		<delete dir="${build.dir}"></delete>
	</target>
	
	<target name="init" depends="clean">
		<echo>初始化文件夹</echo>
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.src}"/>
		<mkdir dir="${build.classes}"/>
		<mkdir dir="${build.lib.dir}"/>
		<mkdir dir="${build.test.dir}"/>
		<mkdir dir="${build.test.src}"/>
		<mkdir dir="${build.test.classes}"/>
		<mkdir dir="${build.test.report}"/>
		<mkdir dir="${build.test.report.html}"/>
	</target>
	
	<target name="copy" depends="init">
		<echo>拷贝源代码</echo>
		<copy todir="${build.src}">
			<fileset refid="srcid"></fileset>
		</copy>
		<copy todir="${build.test.src}">
			<fileset refid="testid"></fileset>
		</copy>
	</target>
	
	<target name="compile" depends="copy">
		<echo>编译源代码</echo>
		<javac srcdir="${build.src}" destdir="${build.classes}" classpathref="compile-path" includeantruntime="false"></javac>
	</target>
	
	<target name="compile-test" depends="compile">
		<echo>编译测试源代码</echo>
		<javac srcdir="${build.test.src}" destdir="${build.test.classes}" classpathref="compile-test-path" includeantruntime="false"></javac>
	</target>
	
	<target name="run-test" depends="compile-test">
		<echo>运行单元测试</echo>
		<junit printsummary="false">
			<classpath refid="run-test-path"></classpath>
			<formatter type="brief" usefile="false"/>
			<!--<test name="${run.test.junit4.class}"></test>-->
			<formatter type="xml"/>
			<batchtest todir="${build.test.report}">
				<fileset dir="${build.test.classes}" includes="${run.test.classes}"></fileset>
			</batchtest>
		</junit>
		<junitreport todir="${build.test.report}">
			<fileset dir="${build.test.report}" includes="TEST-*.xml"></fileset>
			<report format="frames" todir="${build.test.report.html}"/>
		</junitreport>
	</target>
</project>
